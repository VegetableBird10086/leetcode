ZZL:
执行用时：4 ms, 在所有 C++ 提交中击败了99.14%的用户
内存消耗：14.3 MB, 在所有 C++ 提交中击败了98.94%的用户
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==nullptr)
            return l2;
        else if(l2==nullptr)
            return l1;
        else{
            if(l1->val<l2->val){
                l1->next=mergeTwoLists(l1->next,l2);
                return l1;
            }
            else{
                l2->next=mergeTwoLists(l1,l2->next);
                return l2;
            }
        }
    }
};
执行用时：0 ms, 在所有 C++ 提交中击败了100.00%的用户
内存消耗：14.4 MB, 在所有 C++ 提交中击败了91.10%的用户
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* ans=new ListNode();
        ListNode* p=ans;
        while(l1!=nullptr&&l2!=nullptr){
            if(l1->val<l2->val){
                p->next=l1;
                l1=l1->next;
            }
            else{
                p->next=l2;
                l2=l2->next;
            }
            p=p->next;
        }
        if(l1!=nullptr)
            p->next=l1;
        else if(l2!=nullptr)
            p->next=l2;
        return ans->next;
    }
