ZZL:
执行用时：8 ms, 在所有 C++ 提交中击败了93.23%的用户
内存消耗：7.7 MB, 在所有 C++ 提交中击败了99.73%的用户

思路：找规律 每行字符间隔是有规律的 行数为1时特殊处理
class Solution {
public:
    string convert(string s, int numRows) {
        if(numRows==1)
            return s;
        string ans=s;
        int gapEven,gapOdd,length=s.size();
        int it=0;
        for(int i=0;i<numRows;i++){
            gapOdd=(i==numRows-1?(numRows-1)*2:(numRows-i-1)*2);
            gapEven=(i==0?(numRows-1)*2:2*i);
            for(int k=0,j=i;j<length;k++){
                ans[it++]=s[j];
                j+=(k&1?gapEven:gapOdd);
            }
        }
        return ans;
    }
};

官方的题解思路一致，但是更加简洁明了
class Solution {
public:
    string convert(string s, int numRows) {
        if(numRows==1)
            return s;
        int size=s.size(),it=0;
        string ans=s;
        int gap=2*numRows-2;
        for(int i=0;i<numRows;i++){
            for(int j=0;j+i<size;j+=gap){
                ans[it++]=s[j+i];
                if(i!=0&&i!=numRows-1&&j+gap-i<size)
                    ans[it++]=s[j+gap-i];
            }
        }
        return ans;
    }
};


